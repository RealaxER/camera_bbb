// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: typedef.proto

#include "typedef.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_typedef_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_typedef_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoP2p_t;
}  // namespace protobuf_typedef_2eproto
class ProtoP2p_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoP2p_t>
      _instance;
} _ProtoP2p_t_default_instance_;
class Transport_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transport_t>
      _instance;
} _Transport_t_default_instance_;
namespace protobuf_typedef_2eproto {
static void InitDefaultsProtoP2p_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoP2p_t_default_instance_;
    new (ptr) ::ProtoP2p_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoP2p_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoP2p_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoP2p_t}, {}};

static void InitDefaultsTransport_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Transport_t_default_instance_;
    new (ptr) ::Transport_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Transport_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Transport_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransport_t}, {
      &protobuf_typedef_2eproto::scc_info_ProtoP2p_t.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoP2p_t.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transport_t.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoP2p_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoP2p_t, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoP2p_t, candidate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transport_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transport_t, mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Transport_t, p2p_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoP2p_t)},
  { 7, -1, sizeof(::Transport_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtoP2p_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Transport_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "typedef.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rtypedef.proto\"4\n\nProtoP2p_t\022\023\n\013descrip"
      "tion\030\001 \001(\t\022\021\n\tcandidate\030\002 \003(\t\"4\n\013Transpo"
      "rt_t\022\013\n\003mac\030\001 \001(\t\022\030\n\003p2p\030\002 \003(\0132\013.ProtoP2"
      "p_tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 131);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "typedef.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_typedef_2eproto

// ===================================================================

void ProtoP2p_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoP2p_t::kDescriptionFieldNumber;
const int ProtoP2p_t::kCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoP2p_t::ProtoP2p_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_ProtoP2p_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoP2p_t)
}
ProtoP2p_t::ProtoP2p_t(const ProtoP2p_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      candidate_(from.candidate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoP2p_t)
}

void ProtoP2p_t::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProtoP2p_t::~ProtoP2p_t() {
  // @@protoc_insertion_point(destructor:ProtoP2p_t)
  SharedDtor();
}

void ProtoP2p_t::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoP2p_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoP2p_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoP2p_t& ProtoP2p_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_ProtoP2p_t.base);
  return *internal_default_instance();
}


void ProtoP2p_t::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoP2p_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_.Clear();
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ProtoP2p_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoP2p_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoP2p_t.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string candidate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_candidate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->candidate(this->candidate_size() - 1).data(),
            static_cast<int>(this->candidate(this->candidate_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoP2p_t.candidate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoP2p_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoP2p_t)
  return false;
#undef DO_
}

void ProtoP2p_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoP2p_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoP2p_t.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // repeated string candidate = 2;
  for (int i = 0, n = this->candidate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->candidate(i).data(), static_cast<int>(this->candidate(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoP2p_t.candidate");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->candidate(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoP2p_t)
}

::google::protobuf::uint8* ProtoP2p_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoP2p_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoP2p_t.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // repeated string candidate = 2;
  for (int i = 0, n = this->candidate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->candidate(i).data(), static_cast<int>(this->candidate(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoP2p_t.candidate");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->candidate(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoP2p_t)
  return target;
}

size_t ProtoP2p_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoP2p_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string candidate = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->candidate_size());
  for (int i = 0, n = this->candidate_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->candidate(i));
  }

  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoP2p_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoP2p_t)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoP2p_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoP2p_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoP2p_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoP2p_t)
    MergeFrom(*source);
  }
}

void ProtoP2p_t::MergeFrom(const ProtoP2p_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoP2p_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_.MergeFrom(from.candidate_);
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void ProtoP2p_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoP2p_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoP2p_t::CopyFrom(const ProtoP2p_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoP2p_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoP2p_t::IsInitialized() const {
  return true;
}

void ProtoP2p_t::Swap(ProtoP2p_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoP2p_t::InternalSwap(ProtoP2p_t* other) {
  using std::swap;
  candidate_.InternalSwap(CastToBase(&other->candidate_));
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoP2p_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transport_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transport_t::kMacFieldNumber;
const int Transport_t::kP2PFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transport_t::Transport_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_typedef_2eproto::scc_info_Transport_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Transport_t)
}
Transport_t::Transport_t(const Transport_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      p2p_(from.p2p_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac().size() > 0) {
    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
  // @@protoc_insertion_point(copy_constructor:Transport_t)
}

void Transport_t::SharedCtor() {
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Transport_t::~Transport_t() {
  // @@protoc_insertion_point(destructor:Transport_t)
  SharedDtor();
}

void Transport_t::SharedDtor() {
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Transport_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transport_t::descriptor() {
  ::protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transport_t& Transport_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_typedef_2eproto::scc_info_Transport_t.base);
  return *internal_default_instance();
}


void Transport_t::Clear() {
// @@protoc_insertion_point(message_clear_start:Transport_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  p2p_.Clear();
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Transport_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Transport_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mac = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac().data(), static_cast<int>(this->mac().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Transport_t.mac"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoP2p_t p2p = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_p2p()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Transport_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Transport_t)
  return false;
#undef DO_
}

void Transport_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Transport_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Transport_t.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mac(), output);
  }

  // repeated .ProtoP2p_t p2p = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->p2p_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->p2p(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Transport_t)
}

::google::protobuf::uint8* Transport_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Transport_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac = 1;
  if (this->mac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac().data(), static_cast<int>(this->mac().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Transport_t.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mac(), target);
  }

  // repeated .ProtoP2p_t p2p = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->p2p_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->p2p(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Transport_t)
  return target;
}

size_t Transport_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Transport_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtoP2p_t p2p = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->p2p_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->p2p(static_cast<int>(i)));
    }
  }

  // string mac = 1;
  if (this->mac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transport_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Transport_t)
  GOOGLE_DCHECK_NE(&from, this);
  const Transport_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transport_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Transport_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Transport_t)
    MergeFrom(*source);
  }
}

void Transport_t::MergeFrom(const Transport_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Transport_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  p2p_.MergeFrom(from.p2p_);
  if (from.mac().size() > 0) {

    mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
  }
}

void Transport_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Transport_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transport_t::CopyFrom(const Transport_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Transport_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transport_t::IsInitialized() const {
  return true;
}

void Transport_t::Swap(Transport_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transport_t::InternalSwap(Transport_t* other) {
  using std::swap;
  CastToBase(&p2p_)->InternalSwap(CastToBase(&other->p2p_));
  mac_.Swap(&other->mac_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transport_t::GetMetadata() const {
  protobuf_typedef_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_typedef_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoP2p_t* Arena::CreateMaybeMessage< ::ProtoP2p_t >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoP2p_t >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Transport_t* Arena::CreateMaybeMessage< ::Transport_t >(Arena* arena) {
  return Arena::CreateInternal< ::Transport_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
